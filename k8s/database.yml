apiVersion: v1
kind: Namespace
metadata:
  name: student-api
---
apiVersion: v1
kind: Secret
metadata:
  name: vault-token
  namespace: student-api
type: Opaque
data:
  token: cm9vdA== # base64 encoded "root"
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: student-api
spec:
  provider:
    vault:
      server: "http://vault-service.vault-system.svc.cluster.local:8200"
      path: "secret"
      version: "v2"
      auth:
        tokenSecretRef:
          name: "vault-token"
          key: "token"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: db-credentials
  namespace: student-api
spec:
  refreshInterval: 30s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: db-secret
    creationPolicy: Owner
  data:
  - secretKey: DB_USER
    remoteRef:
      key: database
      property: username
  - secretKey: DB_PASSWORD
    remoteRef:
      key: database
      property: password
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: student-api
data:
  POSTGRES_DB: "student_db"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-db
  namespace: student-api
  labels:
    app: postgres-db
    tier: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
        tier: database
    spec:
      nodeSelector:
        type: database
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        envFrom:
        - configMapRef:
            name: postgres-config
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: DB_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: DB_PASSWORD
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - postgres
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: student-api
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: student-api
  labels:
    app: postgres-db
spec:
  selector:
    app: postgres-db
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
  type: ClusterIP